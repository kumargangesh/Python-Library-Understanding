# -*- coding: utf-8 -*-
"""MatplotLib.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KWVwwyL3pmt3mX0Gofdpk0ZaUQtzbCE4

MatplotLib Library :

this library is use to plot maps and charts on the basis of provided data, so that we'll get some more insights and information about our data.
"""

import matplotlib.pyplot as plt
import numpy as np

"""now we are making some random data for making plots"""

x = np.linspace(0, 10, 100) # equally spaced 100 values from 0 to 10
y = np.sin(x) # taking sin of all values of x
z = np.cos(x) # taking cos of all values of x

print(x)

"""Plotting the data"""

# sine plot

plt.plot(x, y)
plt.show()

# cosine plot

plt.plot(x, z)
plt.show()

# labelling the columns of the plat

plt.plot(x, y)
plt.xlabel("angle") # for values of x
plt.ylabel("sine values") # for values of y
plt.title("sine graph") # giving the title to the graph
plt.show()

# plotting a graph for parabola

x = np.linspace(-10, 10, 20)
y = x**2

plt.plot(x, y)
plt.xlabel("X values")
plt.ylabel("Y values")
plt.title("Parabola of y = x^2")
plt.show()

# platoog the graphs using different symbols and colors

plt.plot(x, y, "g*")
plt.show()

# passing - after color is line
# passing -- after color is dotted line

x = np.linspace(-5, 5, 50)
plt.plot(x, np.sin(x), "g-") # plot graph of sin in solid color
plt.plot(x, np.cos(x), "r--") # plot graph of cos in dotted color
plt.show()

"""Bar Graphs Plotting"""

fig = plt.figure() # empty figure
ax = fig.add_axes([0, 0, 1, 1]) # setting the axes of empty figure
languages = ["HINDI", "MARATHI", "BHOJPURI", "BENGALI", "PUNJABI"]
people = [500, 200, 40, 125, 170]
ax.bar(languages, people) # setting the values to bar graph function
plt.xlabel("LANGUAGES")
plt.ylabel("PEOPLE")
plt.show()

"""Pie Chart"""

fig = plt.figure() # empty figure
ax = fig.add_axes([0, 0, 1, 1]) # setting the axes for the figures
languages = ["HINDI", "MARATHI", "BHOJPURI", "BENGALI", "PUNJABI"]
people = [500, 200, 40, 125, 170]
ax.pie(people, labels = languages, autopct = "%1.1f%%") # passing the people value, languages as labels and seeting the value of autopct, which depicts how much floating point number do we want
plt.title("Pie Chart")
plt.show()

"""Scattered Plot"""

x = np.linspace(10, 100, 50)
y = np.sin(x)
z = np.cos(x)
fig = plt.figure()
ax = fig.add_axes([0, 0, 0.5, 0.5])
ax.scatter(x, y, color = "r")
ax.scatter(x, z, color = "b")
plt.show()

"""3D Scatter Plot"""

fig = plt.figure()
x = 20 * np.random.random(100) # getting random values
y = np.sin(x)
z = np.sin(x)
ax = plt.axes(projection = "3d") # setting the axes as 3d projection
ax.scatter(x, y, z, cmap = "blues") # calling the scatter function and passing the values x, y, z and a color map
plt.show()