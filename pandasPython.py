# -*- coding: utf-8 -*-
"""PandasPython.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DfHt4iP1IZZlGs7tNOaQk-wWYcC4wAmR
"""

import pandas as pd
import numpy as np
from google.colab import drive
from sklearn.datasets import load_diabetes

drive.mount('/content/drive')

file_path = '/content/drive/MyDrive/Crypto_Files/coin_Solana.csv'
sl_file = pd.read_csv(file_path)
sl_file.head()

sl_file.shape

"""To copy one .csv file to another .csv file"""

sl_file.to_csv("solanaFile.csv")

random_df = pd.DataFrame(np.random.rand(100, 6))
random_df.head()

"""Inspecting dataframes"""

# rows and columns of DF
random_df.shape

# print forst 5 values of DF
random_df.head()

# print last 5 values of DF
random_df.tail()

# to get detailed information about DF
random_df.info()

# to get number of missing values in DF
random_df.isnull().sum()

"""Statistical Measures"""

# count number of value in columns
random_df.count()

# mean of DF
random_df.mean()

# standard deviation
random_df.std()

# minimim value of DF
random_df.min()

# maximum value of DF
random_df.max()

# all stastical method in one place
# minimim value of DF
random_df.describe()

"""Manopulation a Data Frame"""

df1 = pd.DataFrame(np.random.rand(20, 5), columns = ['one', 'two', 'three', 'four', 'five'])
df1.head()

df2 = pd.DataFrame(np.random.rand(20, 3), columns = ['six', 'seven', 'eight'])
df2.head()

# here, we are copying column named 'six' from df2 to df1

df1['six'] = df2.six
df1.head()

# removing the column form DataFrame

# for removing a row, axis = 0
# for removing a column, axis = 1

# if we wan to remove the first row, then :
df1.drop(index = 0, axis = 0)

# drop a column from DataFrame
df1.drop(columns = "two", axis = 1)

"""Corelation in Pandas : it is use to find the relationship between the columns

There are two type of corelation in pandas :

1. Positive corelation : due to one, second variable increases
2. Negative corelation : due to decrement of one other variable increases
"""

df1.corr()